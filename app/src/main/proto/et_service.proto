syntax = "proto3";
option java_package = "inha.nsl.easytrack";


// user management module
message LoginWithGoogle{
    message Request{
        string idToken = 1;
    }
    message Response{
        bool success = 1;
        int32 userId = 2;
    }
}
message LoginDashboard {
    message Request{
        string email = 1;
        string name = 2;
        string dashboardKey = 3;
    }
    message Response{
        bool success = 1;
        int32 userId = 2;
    }
}
message BindUserToCampaign {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
    }
    message Response{
        bool success = 1;
        bool isFirstTimeBinding = 2;
        int64 campaignStartTimestamp = 3;
    }
}
message RetrieveParticipants {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
    }
    message Response{
        bool success = 1;
        repeated int32 userId = 2;
        repeated string email = 3;
        repeated string name = 4;
    }
}
message RetrieveParticipantStats {
    message Request{
        int32 userId = 1;
        string email = 2;
        string targetEmail = 3;
        int32 targetCampaignId = 4;
    }
    message Response{
        bool success = 1;
        int32 activeCampaignId = 2;
        int64 campaignJoinTimestamp = 3;
        int64 lastSyncTimestamp = 4;
        int64 lastHeartbeatTimestamp = 5;
        int32 amountOfSubmittedDataSamples = 6;
        repeated int32 dataSourceId = 7;
        repeated int32 perDataSourceAmountOfData = 8;
        repeated int64 perDataSourceLastSyncTimestamp = 9;
    }
}

// campaign management module
message RegisterCampaign {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
        string name = 4;
        string notes = 5;
        string configJson = 6;
        int64 startTimestamp = 7;
        int64 endTimestamp = 8;
        int32 removeInactiveUsersTimeout = 9;
    }
    message Response{
        bool success = 1;
        int32 campaignId = 2;
    }
}
message DeleteCampaign {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
    }
    message Response{
        bool success = 1;
    }
}
message RetrieveCampaigns {
    message Request{
        int32 userId = 1;
        string email = 2;
        bool myCampaignsOnly = 3;
    }
    message Response{
        bool success = 1;
        repeated int32 campaignId = 2;
        repeated string name = 3;
        repeated string notes = 4;
        repeated int64 startTimestamp = 5;
        repeated int64 endTimestamp = 6;
        repeated int32 removeInactiveUsersTimeout = 7;
        repeated string creatorEmail = 8;
        repeated string configJson = 9;
        repeated int32 participantCount = 10;
    }
}
message RetrieveCampaign {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
    }
    message Response{
        bool success = 1;
        string name = 2;
        string notes = 3;
        int64 startTimestamp = 4;
        int64 endTimestamp = 5;
        string creatorEmail = 6;
        string configJson = 7;
        int32 participantCount = 8;
    }
}

// data source management module
message BindDataSource {
    message Request{
        int32 userId = 1;
        string email = 2;
        string name = 3;
        string iconName = 4;
    }
    message Response{
        bool success = 1;
        int32 dataSourceId = 2;
        string iconName = 3;
    }
}
message RetrieveDataSources {
    message Request{
        int32 userId = 1;
        string email = 2;
    }
    message Response{
        bool success = 1;
        repeated int32 dataSourceId = 2;
        repeated string name = 3;
        repeated string creatorEmail = 4;
        repeated string iconName = 5;
    }
}

// data management module
message SubmitDataRecord {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
        int64 timestamp = 4;
        int32 dataSource = 5;
        float accuracy = 6;
        bytes value = 7;
    }
    message Response{
        bool success = 1;
    }
}
message SubmitDataRecords {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
        repeated int64 timestamp = 4;
        repeated int32 dataSource = 5;
        repeated float accuracy = 6;
        repeated bytes value = 7;
    }
    message Response{
        bool success = 1;
    }
}
message RetrieveKNextDataRecords {
    message Request{
        int32 userId = 1;
        string email = 2;
        string targetEmail = 3;
        int32 targetCampaignId = 4;
        int32 targetDataSourceId = 5;
        int32 k = 6;
        int32 fromRecordId = 7;
    }
    message Response{
        bool success = 1;
        repeated int32 id = 2;
        repeated int64 timestamp = 3;
        repeated int32 dataSource = 4;
        repeated bytes value = 5;
    }
}
message RetrieveFilteredDataRecords{
    message Request{
        int32 userId = 1;
        string email = 2;
        string targetEmail = 3;
        int32 targetCampaignId = 4;
        int32 targetDataSourceId = 5;
        int64 fromTimestamp = 6;
        int64 tillTimestamp = 7;
    }
    message Response{
        bool success = 1;
        repeated int64 timestamp = 2;
        repeated int32 dataSource = 3;
        repeated bytes value = 4;
    }
}

// statistics module
message SubmitHeartbeat {
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
    }
    message Response{
        bool success = 1;
    }
}

// communication management module
message SubmitDirectMessage {
    message Request{
        int32 userId = 1;
        string email = 2;
        string targetEmail = 3;
        string subject = 4;
        string content = 5;
    }
    message Response{
        bool success = 1;
    }
}
message RetrieveUnreadDirectMessages {
    message Request{
        int32 userId = 1;
        string email = 2;
    }
    message Response{
        bool success = 1;
        repeated string sourceEmail = 2;
        repeated int64 timestamp = 3;
        repeated string subject = 4;
        repeated string content = 5;
    }
}
message RetrieveUnreadNotifications {
    message Request{
        int32 userId = 1;
        string email = 2;
    }
    message Response{
        bool success = 1;
        repeated int32 notificationId = 2;
        repeated int32 campaignId = 3;
        repeated int64 timestamp = 4;
        repeated string subject = 5;
        repeated string content = 6;
    }
}


// data extraction module
message DownloadDumpfile{
    message Request{
        int32 userId = 1;
        string email = 2;
        int32 campaignId = 3;
        int32 targetEmail = 4;
    }
    message Response{
        bool success = 1;
        bytes dump = 2;
    }
}

service ETService {
    // user management module
    rpc loginWithGoogle (LoginWithGoogle.Request) returns (LoginWithGoogle.Response) {}
    rpc loginDashboard (LoginDashboard.Request) returns (LoginDashboard.Response) {}
    rpc bindUserToCampaign (BindUserToCampaign.Request) returns (BindUserToCampaign.Response) {}
    rpc retrieveParticipants (RetrieveParticipants.Request) returns (RetrieveParticipants.Response) {}
    rpc retrieveParticipantStats (RetrieveParticipantStats.Request) returns (RetrieveParticipantStats.Response) {}

    // campaign management module
    rpc registerCampaign (RegisterCampaign.Request) returns (RegisterCampaign.Response) {}
    rpc deleteCampaign (DeleteCampaign.Request) returns (DeleteCampaign.Response) {}
    rpc retrieveCampaigns (RetrieveCampaigns.Request) returns (RetrieveCampaigns.Response) {}
    rpc retrieveCampaign (RetrieveCampaign.Request) returns (RetrieveCampaign.Response) {}

    // data source management module
    rpc bindDataSource (BindDataSource.Request) returns (BindDataSource.Response) {}
    rpc retrieveDataSources (RetrieveDataSources.Request) returns (RetrieveDataSources.Response) {}

    // data management module
    rpc submitDataRecord (SubmitDataRecord.Request) returns (SubmitDataRecord.Response) {}
    rpc submitDataRecords (SubmitDataRecords.Request) returns (SubmitDataRecords.Response) {}
    rpc retrieveKNextDataRecords (RetrieveKNextDataRecords.Request) returns (RetrieveKNextDataRecords.Response) {}
    rpc retrieveFilteredDataRecords (RetrieveFilteredDataRecords.Request) returns (RetrieveFilteredDataRecords.Response) {}

    // statistics module
    rpc submitHeartbeat (SubmitHeartbeat.Request) returns (SubmitHeartbeat.Response) {}

    // communication management module
    rpc submitDirectMessage (SubmitDirectMessage.Request) returns (SubmitDirectMessage.Response) {}
    rpc retrieveUnreadDirectMessages (RetrieveUnreadDirectMessages.Request) returns (RetrieveUnreadDirectMessages.Response) {}
    rpc retrieveUnreadNotifications (RetrieveUnreadNotifications.Request) returns (RetrieveUnreadNotifications.Response) {}

    // data extraction module
    rpc downloadDumpfile (DownloadDumpfile.Request) returns (DownloadDumpfile.Response){}
}


/*
gRPC HOWTO:
Compile into python script:
    python -m grpc_tools.protoc -I=[input directory] --python_out=[output directory] --grpc_python_out=[output directory] [file name].proto
    python -m grpc_tools.protoc -I=./et_protos/ --python_out=./et_grpcs/ --grpc_python_out=./et_grpcs/ et_service.proto
Compile into java source:
    protoc --java_out=[output directory] --grpc_java_out=[output directory] [file name].proto
etc.
*/
